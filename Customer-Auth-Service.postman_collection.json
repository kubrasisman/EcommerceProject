{
	"info": {
		"_postman_id": "customer-auth-service",
		"name": "Customer Auth Service",
		"description": "Complete authentication flow for the e-commerce customer service including registration, login, token refresh, and protected endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register New Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"access_token\", jsonData.accessToken);",
									"    pm.environment.set(\"refresh_token\", jsonData.refreshToken);",
									"    pm.environment.set(\"customer_id\", jsonData.customerId);",
									"    pm.environment.set(\"customer_email\", jsonData.email);",
									"    console.log(\"Tokens saved to environment\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"customer@example.com\",\n  \"password\": \"SecurePassword123!\",\n  \"fullName\": \"John Doe\",\n  \"kvkkConsent\": true\n}"
						},
						"url": {
							"raw": "{{gateway_url}}/api/auth/register",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						},
						"description": "Register a new customer account. Automatically saves access token, refresh token, and customer ID to environment variables."
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"access_token\", jsonData.accessToken);",
									"    pm.environment.set(\"refresh_token\", jsonData.refreshToken);",
									"    pm.environment.set(\"customer_id\", jsonData.customerId);",
									"    pm.environment.set(\"customer_email\", jsonData.email);",
									"    console.log(\"Tokens saved to environment\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"customer@example.com\",\n  \"password\": \"SecurePassword123!\"\n}"
						},
						"url": {
							"raw": "{{gateway_url}}/api/auth/login",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Login with email and password. Automatically saves access token, refresh token, and customer ID to environment variables."
					},
					"response": []
				},
				{
					"name": "Refresh Access Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"access_token\", jsonData.accessToken);",
									"    console.log(\"New access token saved to environment\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"refreshToken\": \"{{refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{gateway_url}}/api/auth/refresh",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"auth",
								"refresh"
							]
						},
						"description": "Get a new access token using the refresh token. The refresh token is automatically retrieved from environment variables."
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Customer-Id",
								"value": "{{customer_id}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{gateway_url}}/api/auth/logout",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"auth",
								"logout"
							]
						},
						"description": "Logout and invalidate the refresh token stored in Redis."
					},
					"response": []
				}
			],
			"description": "Authentication endpoints for customer registration, login, token refresh, and logout"
		},
		{
			"name": "Cart (Protected)",
			"item": [
				{
					"name": "Get Cart",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{gateway_url}}/api/cart",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"cart"
							]
						},
						"description": "Get the current customer's cart from Redis session. Requires authentication."
					},
					"response": []
				},
				{
					"name": "Add Item to Cart",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"productId\": 1,\n  \"productName\": \"Sample Product\",\n  \"price\": 29.99,\n  \"quantity\": 2\n}"
						},
						"url": {
							"raw": "{{gateway_url}}/api/cart/add",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"cart",
								"add"
							]
						},
						"description": "Add a product to the cart. Cart is stored in Redis with 24-hour TTL. Requires authentication."
					},
					"response": []
				},
				{
					"name": "Update Cart Item Quantity",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{gateway_url}}/api/cart/update/1?quantity=5",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"cart",
								"update",
								"1"
							],
							"query": [
								{
									"key": "quantity",
									"value": "5"
								}
							]
						},
						"description": "Update the quantity of a product in the cart. Requires authentication."
					},
					"response": []
				},
				{
					"name": "Remove Item from Cart",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{gateway_url}}/api/cart/remove/1",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"cart",
								"remove",
								"1"
							]
						},
						"description": "Remove a product from the cart. Requires authentication."
					},
					"response": []
				},
				{
					"name": "Clear Cart",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{gateway_url}}/api/cart/clear",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"cart",
								"clear"
							]
						},
						"description": "Clear all items from the cart. Requires authentication."
					},
					"response": []
				}
			],
			"description": "Protected cart endpoints that require JWT authentication"
		},
		{
			"name": "Products (Public)",
			"item": [
				{
					"name": "Get All Products",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{gateway_url}}/api/products",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"products"
							]
						},
						"description": "Get all products. Public endpoint, no authentication required."
					},
					"response": []
				},
				{
					"name": "Get Product by ID",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{gateway_url}}/api/products/1",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"products",
								"1"
							]
						},
						"description": "Get a specific product by ID. Public endpoint, no authentication required."
					},
					"response": []
				}
			],
			"description": "Public product endpoints that don't require authentication"
		},
		{
			"name": "Categories (Public)",
			"item": [
				{
					"name": "Get All Categories",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{gateway_url}}/api/categories",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"api",
								"categories"
							]
						},
						"description": "Get all categories. Public endpoint, no authentication required."
					},
					"response": []
				}
			],
			"description": "Public category endpoints that don't require authentication"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "gateway_url",
			"value": "http://localhost:8888",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "refresh_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "customer_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "customer_email",
			"value": "",
			"type": "string"
		}
	]
}
