spring.application.name=gateway-service
server.port=8888

#eureka
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.prefer-ip-address=true

# JWT Configuration for Token Validation
jwt.secret=${JWT_SECRET:your-secret-key-min-256-bits-长度至少32个字符用于HS256算法}

#discovery service from Eureka via lb:// service ids
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# Route: product-service (public access)
spring.cloud.gateway.routes[0].id=product-service-route
spring.cloud.gateway.routes[0].uri=lb://product-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/products/**

# Category route (public access)
spring.cloud.gateway.routes[4].id=category-service-route
spring.cloud.gateway.routes[4].uri=lb://product-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/categories/**


# Route: order-service (requires authentication)
spring.cloud.gateway.routes[1].id=order-service-route
spring.cloud.gateway.routes[1].uri=lb://order-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/cart/**,/api/orders/**
spring.cloud.gateway.routes[1].filters[0]=jwt

# Route: customer-service auth endpoints (public access)
spring.cloud.gateway.routes[2].id=customer-auth-route
spring.cloud.gateway.routes[2].uri=lb://customer-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/auth/**

# Route: customer-service protected endpoints
spring.cloud.gateway.routes[5].id=customer-service-route
spring.cloud.gateway.routes[5].uri=lb://customer-service
spring.cloud.gateway.routes[5].predicates[0]=Path=/api/customers/**
spring.cloud.gateway.routes[5].filters[0]=jwt

# Route: media-service
spring.cloud.gateway.routes[3].id=media-service-route
spring.cloud.gateway.routes[3].uri=lb://media-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/mediaservice/**
#spring.cloud.gateway.routes[3].filters[0]=jwt

# default filters (example: DedupeResponseHeader)
# MapStruct/props syntax: use an indexed list for default-filters
spring.cloud.gateway.default-filters[0]=DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials,RETAIN_UNIQUE

# global CORS configuration for all paths
spring.cloud.gateway.globalcors.corsConfigurations[/**].allowedOrigins=http://localhost:3000,http://localhost:5173
spring.cloud.gateway.globalcors.corsConfigurations[/**].allowedMethods=GET,HEAD,POST,PUT,DELETE,OPTIONS,PATCH
spring.cloud.gateway.globalcors.corsConfigurations[/**].allowedHeaders=*
spring.cloud.gateway.globalcors.corsConfigurations[/**].allowCredentials=true
